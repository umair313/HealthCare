
x-common: &common
  stdin_open: true
  tty: true
  restart: unless-stopped

x-django-build: &django-build
  build:
    context: .
    dockerfile: Dockerfile
    args:
      REQUIREMENT_FILE: requirements.prod.txt

services:
  django:
    <<: [ *django-build, *common ]
    command: gunicorn HeatlhCare.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./:/code
      - health_care_static_volume:/code/static
      - health_care_media_volume:/code/media
    depends_on:
      - postgres

  postgres:
    image: postgres:13.3-buster
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - health_care_postgres_data:/var/lib/postgresql/data/
    <<: *common

  nginx:
    image: nginx:1.20.1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - health_care_static_volume:/code/static
      - health_care_media_volume:/code/media
    depends_on:
      - django
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    <<: *common

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    <<: *common


volumes:
  health_care_postgres_data:
  health_care_static_volume:
  health_care_media_volume: